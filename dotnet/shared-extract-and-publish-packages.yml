parameters:
- name: nugetVersion
- name: nugetFeedType
- name: feed

steps:

# Install NuGet and restore packages
- task: NuGetToolInstaller@1
  displayName: 'Use NuGet ${{ parameters.nugetVersion }}'
  inputs:
    versionSpec: ${{ parameters.nugetVersion }}

- task: NuGetCommand@2
  displayName: 'NuGet publish internal'
  inputs:
    command: push
    packagesToPush: '$(PIPELINE.WORKSPACE)/build-pipeline/drop/**/*.nupkg;!$(PIPELINE.WORKSPACE)/build-pipeline/drop/**/*.symbols.nupkg'
    publishVstsFeed: '${{ parameters.feed }}'
  condition: and(succeeded(), eq('${{ parameters.nugetFeedType }}', 'internal'))
  
- task: NuGetCommand@2
  displayName: 'NuGet publish external'
  inputs:
    command: push
    packagesToPush: '$(PIPELINE.WORKSPACE)/build-pipeline/drop/**/*.nupkg;!$(PIPELINE.WORKSPACE)/build-pipeline/drop/**/*.symbols.nupkg'
    nuGetFeedType: external
    ${{ if eq(variables['System.TeamProjectId'], 'Pipeline') }}:
      publishFeedCredentials: 'NuGet.org - Release'
    ${{ if ne(variables['System.TeamProjectId'], 'Pipeline') }}:
      # If not 'Pipeline' project, publish to internal instead.
      publishVstsFeed: '${{ parameters.feed }}'
  condition: and(succeeded(), eq('${{ parameters.nugetFeedType }}', 'external'))